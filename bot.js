const TelegramBot = require("node-telegram-bot-api");
const fs = require("fs");

const BOT_TOKEN = process.env.BOT_TOKEN;
if (!BOT_TOKEN) {
  console.error("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è");
  process.exit(1);
}

const bot = new TelegramBot(BOT_TOKEN, { polling: true });

const DB_FILE = "tickets.json";
let tickets = {};

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –±–∏–ª–µ—Ç—ã
if (fs.existsSync(DB_FILE)) {
  tickets = JSON.parse(fs.readFileSync(DB_FILE));
}

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(
    chatId,
    `üëã –ü—Ä–∏–≤–µ—Ç, ${msg.from.first_name}!\n\n–ß–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–∫—Ä—ã—Ç—å WebApp –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –±–∏–ª–µ—Ç–æ–≤.`,
    {
      reply_markup: {
        inline_keyboard: [[{ text: "–û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç", web_app: { url: process.env.WEBAPP_URL } }]]
      }
    }
  );
});

bot.onText(/\/history/, (msg) => {
  const chatId = msg.chat.id;
  const userTickets = tickets[chatId] || [];

  if (userTickets.length === 0) {
    return bot.sendMessage(chatId, "üì≠ –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –±–∏–ª–µ—Ç–æ–≤");
  }

  let history = userTickets
    .map(
      (t, i) =>
        `#${i + 1} ‚Äî ${t.vehicleType} | –¢–° ${t.vehicleNumber} | ${t.amount}‚ÇΩ | ID: ${t.id} | ${new Date(
          t.dateTime
        ).toLocaleString("ru-RU")}`
    )
    .join("\n\n");

  bot.sendMessage(chatId, "üßæ –ò—Å—Ç–æ—Ä–∏—è –±–∏–ª–µ—Ç–æ–≤:\n\n" + history);
});

console.log("ü§ñ Bot started");
